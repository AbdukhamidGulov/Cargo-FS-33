from aiogram.types import CallbackQuery
from aiogram import F, Router, Bot

from database import get_info_profile, get_user_by_tg_id
from keyboards import my_profile_keyboard, back_to_menu_keyboard, samples_keyboard, samples_1688_keyboard, \
    samples_Taobao_keyboard, samples_Pinduoduo_keyboard, samples_Poizon_keyboard, main_keyboard

get_info = Router()


@get_info.callback_query(F.data == "checking_track_code")
async def checking_track_code(callback: CallbackQuery, bot: Bot):
    await bot.send_message(callback.from_user.id, "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç—Ä–µ–∫ –∫–æ–¥–∞üîé")


@get_info.callback_query(F.data == "price")
async def price(callback: CallbackQuery, bot: Bot):
    await callback.message.answer_photo(
        "AgACAgIAAxkBAAPbZztu_WMs7OrFwLEW9wPUzWKoyJYAAvnqMRv6E-FJIrIRnk8frsgBAAMCAANzAAM2BA", "2,5$/–ö–ì\n230/–ö—É–±")


# –í–°–Ø –û–ë–†–ê–ë–û–¢–ö–ê –î–õ–Ø –ê–î–†–ï–°–ê –°–ö–õ–ê–î–ê –ò –û–ë–†–ê–ó–¶–û–í
@get_info.callback_query(F.data == "warehouse_address")
async def warehouse_address(callback: CallbackQuery):
    user_id = await get_user_by_tg_id(callback.from_user.id)
    await callback.message.delete()
    await callback.message.answer(f"   <u>–ê–¥—Ä–µ—Å —Å–∫–ª–∞–¥–∞</u>\nÊî∂‰ª∂‰∫∫Ôºö<code>FS{user_id[0]:04d}</code>\n"
                                  f"ÁîµËØùÂè∑Á†ÅÔºö<code>15116957545</code>\n"
                                  f"Âú∞ÂùÄÔºö<code>‰ΩõÂ±±Â∏ÇÂçóÊµ∑Âå∫Â§ßÊ≤•ÈïáÈªÑÂ≤êÊ≥åÂÜ≤Âá§ÁßÄÂ≤óÂ∑•‰∏öÂå∫Âá§ÁßÄÂ§ßÊ•º18Âè∑3Ê°£¬† FS{user_id[0]:04d} "
                                  f"ÂèëË¥ß‰∏ÄÂÆöË¶ÅÂÜôÂêçÂ≠óÔºåÈ∫¶Â§¥Ôºå‰∏çÁÑ∂‰ªìÂ∫ì‰∏çÊî∂</code>")
    await callback.message.answer("–ù–∞–∂–º–∏—Ç–µ —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å –æ–±—Ä–∞–∑—Ü—ã", reply_markup=samples_keyboard)


@get_info.callback_query(F.data.startswith("simple_"))
async def handle_simple(callback: CallbackQuery):
    await callback.message.delete()
    samples = {
        "1688": {
            "photo_id": "AgACAgIAAxkBAAIBimc_ZKt4RFZIx-jpBI116ulY13LAAAKq7DEbu-rwSQ6olox6fGduAQADAgADcwADNgQ",
            "caption": "–û–±—Ä–∞–∑–µ—Ü 1688", "keyboard": samples_1688_keyboard},
        "Taobao": {
            "photo_id": "AgACAgIAAxkBAAIBjGc_ZR4880Smla-5Bgd2Sjnn_AbyAAKt7DEbu-rwSXoONn0x9TuXAQADAgADcwADNgQ",
            "caption": "–û–±—Ä–∞–∑–µ—Ü Taobao", "keyboard": samples_Taobao_keyboard},
        "Pinduoduo": {
            "photo_id": "AgACAgIAAxkBAAIBjmc_ZYPMxuT9j_Zb5UgVlsb_l3H0AAKu7DEbu-rwSdaIN5anq7SqAQADAgADcwADNgQ",
            "caption": "–û–±—Ä–∞–∑–µ—Ü Pinduoduo", "keyboard": samples_Pinduoduo_keyboard},
        "Poizon": {
            "photo_id": "AgACAgIAAxkBAAIBkGc_ZdXomhwB_-CBUdPwO5bsAswkAAJD5zEbrMfxSV5EjAkSWiH9AQADAgADcwADNgQ",
            "caption": "–û–±—Ä–∞–∑–µ—Ü poizon", "keyboard": samples_Poizon_keyboard}}

    key = callback.data.split("_")[-1]
    sample = samples[key]
    await callback.message.answer_photo(sample["photo_id"], sample["caption"])
    await callback.message.answer("–ù–∞–∂–º–∏—Ç–µ —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å –¥—Ä—É–≥–∏–µ –æ–±—Ä–∞–∑—Ü—ã", reply_markup=sample["keyboard"])


# –û–ë–†–ê–ë–û–¢–ß–ò–ö - –ó–ê–†–ï–©–Å–ù–ù–´–ï –í–ï–©–ï–°–¢–í–ê
@get_info.callback_query(F.data == "prohibited_goods")
async def prohibited_goods(callback: CallbackQuery):
    pd = ("    <b>–ù–ê–®–ï –ö–ê–†–ì–û –ù–ï –ü–†–ò–ù–ò–ú–ê–ï–¢ –°–õ–ï–î–£–Æ–©–ò–ï –í–ò–î–´ –ü–û–°–´–õ–û–ö!</b>\n\n"
          "1. <b>–õ–µ–∫–∞—Ä—Å—Ç–≤–∞</b> (–ø–æ—Ä–æ—à–∫–∏, —Ç–∞–±–ª–µ—Ç–∫–∏, –ª–µ–∫–∞—Ä—Å—Ç–≤–∞ –≤ –≤–∏–¥–µ –∂–∏–¥–∫–æ—Å—Ç–µ–π).\n\n"
          "2. <b>–í—Å–µ –≤–∏–¥—ã —Ö–æ–ª–æ–¥–Ω–æ–≥–æ –æ—Ä—É–∂–∏—è</b> (–Ω–æ–∂–∏, —ç–ª–µ–∫—Ç—Ä–æ—à–æ–∫–µ—Ä—ã, –±–∏—Ç—ã –∏ –¥—Ä—É–≥–æ–µ –¥–∞–Ω–Ω–æ–≥–æ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∞) "
          "–ø–æ–ª–Ω–æ—Å—Ç—å—é –∑–∞–ø—Ä–µ—â–µ–Ω—ã.\n\n3. <b>–¢–µ—Ö–Ω–∏–∫–∞</b> (–ú–æ–±–∏–ª—å–Ω—ã–µ —Ç–µ–ª–µ—Ñ–æ–Ω—ã, –ø–ª–∞–Ω—à–µ—Ç—ã, –Ω–æ—É—Ç–±—É–∫–∏ –∏ —Ç.–¥)")
    await callback.message.answer(pd)


# –û–ë–†–ê–ë–û–¢–ß–ò–ö –ö–û–ú–ê–ù–î–´ "my_profile"
@get_info.callback_query(F.data == "my_profile")
async def my_profile(callback: CallbackQuery):
    inf = await get_info_profile(callback.from_user.id)
    if not inf: await callback.message.answer("–ü—Ä–æ—Ñ–∏–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω.", reply_markup=back_to_menu_keyboard)
    no = "<i>–ù–µ –∑–∞–ø–æ–ª–Ω–µ–Ω–æ</i>"
    await callback.message.delete()
    await callback.message.answer(
        f"–ù–æ–º–µ—Ä –¥–ª—è –∑–∞–∫–∞–∑–æ–≤: <code>FS{inf.get('id'):04d}</code>\n"
        f"–ò–º—è: {inf.get('name') or no}\n"
        f"–ù–æ–º–µ—Ä: {inf.get('phone') or no}\n"
        f"–ê–¥—Ä–µ—Å –¥–æ—Å—Ç–∞–≤–∫–∏: {inf.get('address') or no}\n"
        f"–¢—Ä–µ–∫ –∫–æ–¥—ã: {inf.get('track_codes') or '<i>–ù–µ—Ç —Ç—Ä–µ–∫ –∫–æ–¥–æ–≤</i>'}\n")
    await callback.message.answer("–ù–∞–∂–º–∏—Ç–µ —á—Ç–æ–±—ã –∏–∑–º–µ–Ω–∏—Ç –¥–∞–Ω–Ω—ã–µ...", reply_markup=my_profile_keyboard)


# –û–ë–†–ê–ë–û–¢–ß–ò–ö –ö–û–ú–ê–ù–î–´ –ù–ê–ó–ê–î –í –ì–õ–ê–í–ù–û–ï –ú–ï–ù–Æ
@get_info.callback_query(F.data == "main_menu")
async def back_to_menu(callback: CallbackQuery):
    await callback.message.delete()
    await callback.message.answer("–ö–∞–∫ —è –º–æ–≥—É –≤–∞–º –ø–æ–º–æ—á—å?", reply_markup=main_keyboard)