from os import getenv
from asyncio import run
from dotenv import load_dotenv
from aiogram import Bot, Dispatcher
from aiogram.client.default import DefaultBotProperties
from aiogram.filters import CommandStart, Command
from aiogram.types import Message

from get_information import gi
from registration_process import states
from keyboards import main_keyboard, reg_keyboard
from database import create_users_table, get_user_by_tg_id

load_dotenv()
TELEGRAM_BOT_TOKEN = getenv('BOT_TOKEN')

bot = Bot(token=TELEGRAM_BOT_TOKEN, default=DefaultBotProperties(parse_mode='HTML'))
dp = Dispatcher()
dp.include_routers(gi, states)


@dp.message(CommandStart())
async def start_command(message: Message):
    await message.answer('–í–∞—Å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ—Ç Telegram-–±–æ—Ç –∫–∞—Ä–≥–æ –∫–æ–º–ø–∞–Ω–∏–∏ <b>FS-33</b> üöö')
    user = await get_user_by_tg_id(message.from_user.id)
    if user:
        await message.answer('–Ø –ø–æ–º–æ–≥—É –≤–∞–º –Ω–∞–π—Ç–∏ –∞–¥—Ä–µ—Å–∞ —Å–∫–ª–∞–¥–æ–≤, –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Ç—Ä–µ–∫-–∫–æ–¥ –∏ –æ–∑–Ω–∞–∫–æ–º–∏—Ç—å —Å —Ü–µ–Ω–∞–º–∏',
                             reply_markup=main_keyboard)
    else:
        await message.answer('–í—ã –µ—â—ë –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã —á—Ç–æ–±—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç—Å—è –Ω–∞—à–∏–º –±–æ—Ç–æ–º\n\n'
                             '–•–æ—Ç–∏—Ç–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è?', reply_markup=reg_keyboard)


@dp.message(Command(commands=['help']))
async def help_command(message: Message):
    await message.answer('–ö–æ–º–∞–Ω–¥–∞ —Ö–µ–ª–ø')


@dp.message(Command(commands=["create_db"]))
async def create_db_command(message: Message):
    await create_users_table()
    await message.answer("–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞!")


async def main():
    try:
        print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω")
        await dp.start_polling(bot)
    finally:
        await bot.session.close()
        print("–°–µ—Å—Å–∏—è –±–æ—Ç–∞ –∑–∞–∫—Ä—ã—Ç–∞")

if __name__ == "__main__":
    run(main())


# @dp.message(F.photo)
# async def photo(message: Message):
#     await message.answer(message.photo[0].file_id)
