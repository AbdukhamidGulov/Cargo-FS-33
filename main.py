from os import getenv
from asyncio import run
from dotenv import load_dotenv
from aiogram import Bot, Dispatcher, F
from aiogram.types import Message, CallbackQuery
from aiogram.filters import CommandStart, Command
from aiogram.client.default import DefaultBotProperties

from filters import IsAdmin
from change_processor import change
from track_numbers import track_code
from get_information import get_info
from registration_process import states
from calculator.calc_handlers import calc
from calculator.calc_volume import calc_volume
from calculator.calculate_shipping import calc_shipping
from keyboards import main_keyboard, reg_keyboard, admin_keyboard
from database import create_users_table, get_user_by_tg_id, drop_users_table, create_track_numbers_table, \
    drop_track_numbers_table

load_dotenv()
TELEGRAM_BOT_TOKEN = getenv('BOT_TOKEN')
admin_ids: list[int] = [5302111687]

bot = Bot(token=TELEGRAM_BOT_TOKEN, default=DefaultBotProperties(parse_mode='HTML'))
dp = Dispatcher()
dp.include_routers(get_info, change, states, track_code, calc, calc_volume, calc_shipping)


@dp.message(CommandStart())
async def start_command(message: Message):
    await message.answer_photo(
        'AgACAgIAAxkBAAIElGdLMwTg5ryGW34KC5nWUmfQEjlgAAL65TEb4nBYSpjvLhbFuxviAQADAgADcwADNgQ',
        '–í–∞—Å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ—Ç Telegram-–±–æ—Ç –∫–∞—Ä–≥–æ –∫–æ–º–ø–∞–Ω–∏–∏ <b>FS-33</b> üöö')
    user = await get_user_by_tg_id(message.from_user.id)
    if user:
        await message.answer('–Ø –ø–æ–º–æ–≥—É –≤–∞–º –Ω–∞–π—Ç–∏ –∞–¥—Ä–µ—Å–∞ —Å–∫–ª–∞–¥–æ–≤, –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Ç—Ä–µ–∫-–∫–æ–¥ –∏ –æ–∑–Ω–∞–∫–æ–º–∏—Ç—å —Å —Ü–µ–Ω–∞–º–∏',
                             reply_markup=main_keyboard)
    else:
        await message.answer('–í—ã –µ—â—ë –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã —á—Ç–æ–±—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç—Å—è –Ω–∞—à–∏–º –±–æ—Ç–æ–º\n\n'
                             '–•–æ—Ç–∏—Ç–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è?', reply_markup=reg_keyboard)


@dp.message(Command(commands=['admin']), IsAdmin(admin_ids))
async def admin_command(message: Message):
    await message.answer('  <u>–°–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥:</u>\n', reply_markup=admin_keyboard)


@dp.message(Command(commands=['admin']))
async def admin_command(message: Message):
    await message.answer('–í—ã –Ω–µ —è–≤—è–µ—Ç–µ—Å—å –∞–¥–º–∏–Ω–æ–º')
    await bot.send_message(admin_ids[0], text=f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ—å {message.from_user.username} "
                                              f"c id {message.from_user.id} –Ω–∞–∂–∞–ª –Ω–∞ –∫–æ–º–∞–Ω–¥—É <b>admin</b>")
    print("message.from_user.id")


@dp.message(Command(commands=['help']))
async def help_command(message: Message):
    await message.answer('–ö–æ–º–∞–Ω–¥–∞ —Ö–µ–ª–ø')


@dp.callback_query(F.data == "add_track_codes")
async def checking_track_code(callback: CallbackQuery):
    await drop_users_table()
    await create_users_table()
    await callback.message.answer('–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —É—Å–ø–µ—à–Ω–æ –ø–µ—Å–æ–∑–¥–∞–Ω–∞!')


@dp.callback_query(F.data == "add_track_codes")
async def checking_track_code(callback: CallbackQuery):
    await drop_track_numbers_table()
    await create_track_numbers_table()
    await callback.message.answer('–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –¢—Ä–µ–∫-–Ω–æ–º–µ—Ä–æ–≤ —É—Å–ø–µ—à–Ω–æ –ø–µ—Å–æ–∑–¥–∞–Ω–∞!')


@dp.message(F.photo)
async def photo(message: Message):
    await message.answer(print_token_photo := message.photo[0].file_id)
    print(print_token_photo)


async def main():
    try:
        await create_users_table()
        await create_track_numbers_table()
        print('–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω')
        await dp.start_polling(bot)
    finally:
        await bot.session.close()
        print('–°–µ—Å—Å–∏—è –±–æ—Ç–∞ –∑–∞–∫—Ä—ã—Ç–∞')

if __name__ == "__main__":
    run(main())
