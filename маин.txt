from sys import stdout
from asyncio import run, sleep
from logging import basicConfig, getLogger, WARNING

from aiogram import Bot, Dispatcher
from aiogram.client.default import DefaultBotProperties
from aiogram.webhook.aiohttp_server import SimpleRequestHandler
from aiohttp import web

from commands import commands_router
from request import request_router
from profile import profile_router
from database.base import setup_database
from admin.admin_panel import admin_router
from track_numbers import track_code_router
from get_information import get_info_router
from registration_process import states_router
from calculator.calc_volume import calc_volume_router
from calculator.calculate_insurance import calc_ins_router
from calculator.calculate_shipping import calc_shipping_router
from middlewares.middleware import ExceptionHandlingMiddleware
from filters_and_config import TELEGRAM_BOT_TOKEN, WEBHOOK_HOST, WEBHOOK_PATH, WEBAPP_HOST, WEBAPP_PORT

bot = Bot(token=TELEGRAM_BOT_TOKEN, default=DefaultBotProperties(parse_mode='HTML'))
dp = Dispatcher()
dp.include_routers(commands_router, admin_router, get_info_router, states_router, profile_router,
                   track_code_router, request_router, calc_volume_router, calc_ins_router, calc_shipping_router)
dp.update.outer_middleware(ExceptionHandlingMiddleware())
WEBHOOK_URL = f'https://{WEBHOOK_HOST}{WEBHOOK_PATH}'
basicConfig(level=WARNING, stream=stdout)
logger = getLogger(__name__)


async def on_startup(app):
    """Действия при старте бота (установка вебхука)."""
    webhook_info = await bot.get_webhook_info()
    if webhook_info.url != WEBHOOK_URL:
        try:
            await bot.set_webhook(url=WEBHOOK_URL)
            logger.info(f"Вебхук установлен на: {WEBHOOK_URL}")
        except Exception as e:
            logger.error(f"Не удалось установить вебхук: {e}")

async def on_shutdown():
    """Действия при завершении работы бота (удаление вебхука)."""
    try:
        await bot.delete_webhook()
        logger.info("Вебхук удален.")
    except Exception as e:
        logger.error(f"Не удалось удалить вебхук: {e}")
    finally:
        await bot.session.close()
        logger.info('Сессия бота закрыта')


async def main():
    """Основная функция для запуска Telegram-бота с использованием webhook."""
    await setup_database()
    logger.info('База данных инициализирована')

    app = web.Application()
    # Создать экземпляр WebhookRequestHandler с диспетчером и ботом
    webhook_handler = SimpleRequestHandler(
        dispatcher=dp,
        bot=bot,
    )
    # Зарегистрировать обработчик вебхука по пути
    webhook_handler.register(app, path=WEBHOOK_PATH)

    # Вызвать действия при старте (установить вебхук)
    app.on_startup.append(on_startup)
    # Вызвать действия при завершении работы (удалить вебхук)
    app.on_shutdown.append(on_shutdown)

    # Настроить приложение и запустить веб-сервер
    runner = web.AppRunner(app)
    await runner.setup()
    site = web.TCPSite(runner, WEBAPP_HOST, WEBAPP_PORT)
    await site.start()
    logger.info(f"Веб-сервер запущен на http://{WEBAPP_HOST}:{WEBAPP_PORT}{WEBHOOK_PATH}")

    # Поддерживать работу сервера до ручной остановки
    while True:
        await sleep(3600)  # Спать один час


if __name__ == "__main__":
    run(main())
